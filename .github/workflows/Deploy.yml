name: WORK

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  cp:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    name: install
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # 下面这一步不需要了,以为已经cp好了
      #Runs a single command using the runners shell
      - name: install
        run: |
          node -v
          npm install -g pnpm
          pnpm install

      # delete
      - name: delete
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.ACCESS_TOKEN }}
          port: 22
          script: |
            cp /home/nodeServer/my-page-server/static -rf /home/nodeServer/temp
            rm -rf /home/nodeServer/my-page-server

      # copy
      - name: copy
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.ACCESS_TOKEN }}
          # #ARGS: "-avz --delete"
          SOURCE: './'
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.ACCESS_TARGET_PATH }}
          EXCLUDE: "/static/*"

      #run
      - name: run
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.ACCESS_TOKEN }}
          port: 22
          script: |
            pm2 ls
            pm2 stop index
            pm2 delete index
            cd /home/nodeServer
            ls
            cd /home/nodeServer/my-page-server
            pwd
            ls
            cp /home/nodeServer/temp -rf /home/nodeServer/my-page-server/static/upload
            rm -rf /home/nodeServer/temp
            pm2 start ./src/index.js
            pm2 ls
